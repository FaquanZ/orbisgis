//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.02.07 at 09:55:42 AM CET 
//


package org.orbisgis.core.renderer.persistance.se;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;
import org.orbisgis.core.renderer.persistance.ows._1.DescriptionType;
import org.orbisgis.core.renderer.persistance.ows._1.OnlineResourceType;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the net.opengis.se package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _FontSize_QNAME = new QName("http://www.opengis.net/se", "FontSize");
    private final static QName _CategoryWidth_QNAME = new QName("http://www.opengis.net/se", "CategoryWidth");
    private final static QName _Matrix_QNAME = new QName("http://www.opengis.net/se", "Matrix");
    private final static QName _WellKnownName_QNAME = new QName("http://www.opengis.net/se", "WellKnownName");
    private final static QName _Key_QNAME = new QName("http://www.opengis.net/se", "Key");
    private final static QName _Format_QNAME = new QName("http://www.opengis.net/se", "Format");
    private final static QName _Translate_QNAME = new QName("http://www.opengis.net/se", "Translate");
    private final static QName _Geometry_QNAME = new QName("http://www.opengis.net/se", "Geometry");
    private final static QName _SourceChannelName_QNAME = new QName("http://www.opengis.net/se", "SourceChannelName");
    private final static QName _PointSymbolizer_QNAME = new QName("http://www.opengis.net/se", "PointSymbolizer");
    private final static QName _CategoryGap_QNAME = new QName("http://www.opengis.net/se", "CategoryGap");
    private final static QName _GammaValue_QNAME = new QName("http://www.opengis.net/se", "GammaValue");
    private final static QName _CompositeGraphic_QNAME = new QName("http://www.opengis.net/se", "CompositeGraphic");
    private final static QName _TimePeriod_QNAME = new QName("http://www.opengis.net/se", "TimePeriod");
    private final static QName _FeatureTypeStyleReference_QNAME = new QName("http://www.opengis.net/se", "FeatureTypeStyleReference");
    private final static QName _PieSubtype_QNAME = new QName("http://www.opengis.net/se", "PieSubtype");
    private final static QName _FirstValue_QNAME = new QName("http://www.opengis.net/se", "FirstValue");
    private final static QName _Rotation_QNAME = new QName("http://www.opengis.net/se", "Rotation");
    private final static QName _StrokeElement_QNAME = new QName("http://www.opengis.net/se", "StrokeElement");
    private final static QName _E_QNAME = new QName("http://www.opengis.net/se", "E");
    private final static QName _D_QNAME = new QName("http://www.opengis.net/se", "D");
    private final static QName _F_QNAME = new QName("http://www.opengis.net/se", "F");
    private final static QName _A_QNAME = new QName("http://www.opengis.net/se", "A");
    private final static QName _C_QNAME = new QName("http://www.opengis.net/se", "C");
    private final static QName _B_QNAME = new QName("http://www.opengis.net/se", "B");
    private final static QName _Rotate_QNAME = new QName("http://www.opengis.net/se", "Rotate");
    private final static QName _FeatureTypeStyle_QNAME = new QName("http://www.opengis.net/se", "FeatureTypeStyle");
    private final static QName _OverlapBehavior_QNAME = new QName("http://www.opengis.net/se", "OverlapBehavior");
    private final static QName _X_QNAME = new QName("http://www.opengis.net/se", "X");
    private final static QName _Y_QNAME = new QName("http://www.opengis.net/se", "Y");
    private final static QName _UnitOfMeasure_QNAME = new QName("http://www.opengis.net/se", "UnitOfMeasure");
    private final static QName _Interpolate_QNAME = new QName("http://www.opengis.net/se", "Interpolate");
    private final static QName _DensityFill_QNAME = new QName("http://www.opengis.net/se", "DensityFill");
    private final static QName _StackedBar_QNAME = new QName("http://www.opengis.net/se", "StackedBar");
    private final static QName _ColorMap_QNAME = new QName("http://www.opengis.net/se", "ColorMap");
    private final static QName _CoverageStyleReference_QNAME = new QName("http://www.opengis.net/se", "CoverageStyleReference");
    private final static QName _Orientation_QNAME = new QName("http://www.opengis.net/se", "Orientation");
    private final static QName _Stroke_QNAME = new QName("http://www.opengis.net/se", "Stroke");
    private final static QName _Function_QNAME = new QName("http://www.opengis.net/se", "Function");
    private final static QName _ViewBox_QNAME = new QName("http://www.opengis.net/se", "ViewBox");
    private final static QName _Label_QNAME = new QName("http://www.opengis.net/se", "Label");
    private final static QName _ArgumentList_QNAME = new QName("http://www.opengis.net/se", "ArgumentList");
    private final static QName _FontFamily_QNAME = new QName("http://www.opengis.net/se", "FontFamily");
    private final static QName _CompositeSymbolizer_QNAME = new QName("http://www.opengis.net/se", "CompositeSymbolizer");
    private final static QName _Radius_QNAME = new QName("http://www.opengis.net/se", "Radius");
    private final static QName _ExternalGraphic_QNAME = new QName("http://www.opengis.net/se", "ExternalGraphic");
    private final static QName _Scale_QNAME = new QName("http://www.opengis.net/se", "Scale");
    private final static QName _TileGap_QNAME = new QName("http://www.opengis.net/se", "TileGap");
    private final static QName _LineJoin_QNAME = new QName("http://www.opengis.net/se", "LineJoin");
    private final static QName _Version_QNAME = new QName("http://www.opengis.net/se", "Version");
    private final static QName _SemanticTypeIdentifier_QNAME = new QName("http://www.opengis.net/se", "SemanticTypeIdentifier");
    private final static QName _Extension_QNAME = new QName("http://www.opengis.net/se", "Extension");
    private final static QName _Normalization_QNAME = new QName("http://www.opengis.net/se", "Normalization");
    private final static QName _ExclusionRectangle_QNAME = new QName("http://www.opengis.net/se", "ExclusionRectangle");
    private final static QName _FontWeight_QNAME = new QName("http://www.opengis.net/se", "FontWeight");
    private final static QName _LineCap_QNAME = new QName("http://www.opengis.net/se", "LineCap");
    private final static QName _CoverageStyle_QNAME = new QName("http://www.opengis.net/se", "CoverageStyle");
    private final static QName _GrayChannel_QNAME = new QName("http://www.opengis.net/se", "GrayChannel");
    private final static QName _LegendGraphic_QNAME = new QName("http://www.opengis.net/se", "LegendGraphic");
    private final static QName _Value_QNAME = new QName("http://www.opengis.net/se", "Value");
    private final static QName _Distance_QNAME = new QName("http://www.opengis.net/se", "Distance");
    private final static QName _TextSymbolizer_QNAME = new QName("http://www.opengis.net/se", "TextSymbolizer");
    private final static QName _ValueToRepresent_QNAME = new QName("http://www.opengis.net/se", "ValueToRepresent");
    private final static QName _PieChart_QNAME = new QName("http://www.opengis.net/se", "PieChart");
    private final static QName _InterpolationPoint_QNAME = new QName("http://www.opengis.net/se", "InterpolationPoint");
    private final static QName _MarkGraphic_QNAME = new QName("http://www.opengis.net/se", "MarkGraphic");
    private final static QName _RedChannel_QNAME = new QName("http://www.opengis.net/se", "RedChannel");
    private final static QName _VerticalAlignment_QNAME = new QName("http://www.opengis.net/se", "VerticalAlignment");
    private final static QName _Log10_QNAME = new QName("http://www.opengis.net/se", "Log10");
    private final static QName _InlineContent_QNAME = new QName("http://www.opengis.net/se", "InlineContent");
    private final static QName _Normalize_QNAME = new QName("http://www.opengis.net/se", "Normalize");
    private final static QName _DomainValue_QNAME = new QName("http://www.opengis.net/se", "DomainValue");
    private final static QName _MaxScaleDenominator_QNAME = new QName("http://www.opengis.net/se", "MaxScaleDenominator");
    private final static QName _Graphic_QNAME = new QName("http://www.opengis.net/se", "Graphic");
    private final static QName _Encoding_QNAME = new QName("http://www.opengis.net/se", "Encoding");
    private final static QName _ExtensionParameter_QNAME = new QName("http://www.opengis.net/se", "ExtensionParameter");
    private final static QName _Parameter_QNAME = new QName("http://www.opengis.net/se", "Parameter");
    private final static QName _Angle_QNAME = new QName("http://www.opengis.net/se", "Angle");
    private final static QName _Transform_QNAME = new QName("http://www.opengis.net/se", "Transform");
    private final static QName _AlternativeStrokeElements_QNAME = new QName("http://www.opengis.net/se", "AlternativeStrokeElements");
    private final static QName _Threshold_QNAME = new QName("http://www.opengis.net/se", "Threshold");
    private final static QName _StackedBars_QNAME = new QName("http://www.opengis.net/se", "StackedBars");
    private final static QName _RelativeOrientation_QNAME = new QName("http://www.opengis.net/se", "RelativeOrientation");
    private final static QName _Sqrt_QNAME = new QName("http://www.opengis.net/se", "Sqrt");
    private final static QName _MapItem_QNAME = new QName("http://www.opengis.net/se", "MapItem");
    private final static QName _Description_QNAME = new QName("http://www.opengis.net/se", "Description");
    private final static QName _DomainConstraints_QNAME = new QName("http://www.opengis.net/se", "DomainConstraints");
    private final static QName _GraphicStroke_QNAME = new QName("http://www.opengis.net/se", "GraphicStroke");
    private final static QName _TextGraphic_QNAME = new QName("http://www.opengis.net/se", "TextGraphic");
    private final static QName _Category_QNAME = new QName("http://www.opengis.net/se", "Category");
    private final static QName _BlueChannel_QNAME = new QName("http://www.opengis.net/se", "BlueChannel");
    private final static QName _LineSymbolizer_QNAME = new QName("http://www.opengis.net/se", "LineSymbolizer");
    private final static QName _LabelText_QNAME = new QName("http://www.opengis.net/se", "LabelText");
    private final static QName _ChannelSelection_QNAME = new QName("http://www.opengis.net/se", "ChannelSelection");
    private final static QName _StyledLabel_QNAME = new QName("http://www.opengis.net/se", "StyledLabel");
    private final static QName _Data_QNAME = new QName("http://www.opengis.net/se", "Data");
    private final static QName _PolarChart_QNAME = new QName("http://www.opengis.net/se", "PolarChart");
    private final static QName _Opacity_QNAME = new QName("http://www.opengis.net/se", "Opacity");
    private final static QName _Color_QNAME = new QName("http://www.opengis.net/se", "Color");
    private final static QName _Categorize_QNAME = new QName("http://www.opengis.net/se", "Categorize");
    private final static QName _PointLabel_QNAME = new QName("http://www.opengis.net/se", "PointLabel");
    private final static QName _SolidFill_QNAME = new QName("http://www.opengis.net/se", "SolidFill");
    private final static QName _AxisChart_QNAME = new QName("http://www.opengis.net/se", "AxisChart");
    private final static QName _ShadedRelief_QNAME = new QName("http://www.opengis.net/se", "ShadedRelief");
    private final static QName _PostGap_QNAME = new QName("http://www.opengis.net/se", "PostGap");
    private final static QName _ReliefFactor_QNAME = new QName("http://www.opengis.net/se", "ReliefFactor");
    private final static QName _StrokeAnnotationGraphic_QNAME = new QName("http://www.opengis.net/se", "StrokeAnnotationGraphic");
    private final static QName _GraphicFill_QNAME = new QName("http://www.opengis.net/se", "GraphicFill");
    private final static QName _AxisScale_QNAME = new QName("http://www.opengis.net/se", "AxisScale");
    private final static QName _HatchedFill_QNAME = new QName("http://www.opengis.net/se", "HatchedFill");
    private final static QName _PerpendicularOffset_QNAME = new QName("http://www.opengis.net/se", "PerpendicularOffset");
    private final static QName _OnlineResource_QNAME = new QName("http://www.opengis.net/se", "OnlineResource");
    private final static QName _PreGap_QNAME = new QName("http://www.opengis.net/se", "PreGap");
    private final static QName _Font_QNAME = new QName("http://www.opengis.net/se", "Font");
    private final static QName _ContrastEnhancement_QNAME = new QName("http://www.opengis.net/se", "ContrastEnhancement");
    private final static QName _TextStroke_QNAME = new QName("http://www.opengis.net/se", "TextStroke");
    private final static QName _Slice_QNAME = new QName("http://www.opengis.net/se", "Slice");
    private final static QName _ValuePerMark_QNAME = new QName("http://www.opengis.net/se", "ValuePerMark");
    private final static QName _BrightnessOnly_QNAME = new QName("http://www.opengis.net/se", "BrightnessOnly");
    private final static QName _HoleRadius_QNAME = new QName("http://www.opengis.net/se", "HoleRadius");
    private final static QName _ExclusionZone_QNAME = new QName("http://www.opengis.net/se", "ExclusionZone");
    private final static QName _DashArray_QNAME = new QName("http://www.opengis.net/se", "DashArray");
    private final static QName _GreenChannel_QNAME = new QName("http://www.opengis.net/se", "GreenChannel");
    private final static QName _Length_QNAME = new QName("http://www.opengis.net/se", "Length");
    private final static QName _Halo_QNAME = new QName("http://www.opengis.net/se", "Halo");
    private final static QName _MinScaleDenominator_QNAME = new QName("http://www.opengis.net/se", "MinScaleDenominator");
    private final static QName _Measure_QNAME = new QName("http://www.opengis.net/se", "Measure");
    private final static QName _MarkIndex_QNAME = new QName("http://www.opengis.net/se", "MarkIndex");
    private final static QName _Offset_QNAME = new QName("http://www.opengis.net/se", "Offset");
    private final static QName _DomainAxis_QNAME = new QName("http://www.opengis.net/se", "DomainAxis");
    private final static QName _Width_QNAME = new QName("http://www.opengis.net/se", "Width");
    private final static QName _Symbolizer_QNAME = new QName("http://www.opengis.net/se", "Symbolizer");
    private final static QName _FeatureTypeName_QNAME = new QName("http://www.opengis.net/se", "FeatureTypeName");
    private final static QName _ImageOutline_QNAME = new QName("http://www.opengis.net/se", "ImageOutline");
    private final static QName _Height_QNAME = new QName("http://www.opengis.net/se", "Height");
    private final static QName _AlternativeGraphics_QNAME = new QName("http://www.opengis.net/se", "AlternativeGraphics");
    private final static QName _CoverageName_QNAME = new QName("http://www.opengis.net/se", "CoverageName");
    private final static QName _XY_QNAME = new QName("http://www.opengis.net/se", "XY");
    private final static QName _FormalParameters_QNAME = new QName("http://www.opengis.net/se", "FormalParameters");
    private final static QName _RelativePosition_QNAME = new QName("http://www.opengis.net/se", "RelativePosition");
    private final static QName _AxisLength_QNAME = new QName("http://www.opengis.net/se", "AxisLength");
    private final static QName _Argument_QNAME = new QName("http://www.opengis.net/se", "Argument");
    private final static QName _Recode_QNAME = new QName("http://www.opengis.net/se", "Recode");
    private final static QName _HorizontalAlignment_QNAME = new QName("http://www.opengis.net/se", "HorizontalAlignment");
    private final static QName _LookupValue_QNAME = new QName("http://www.opengis.net/se", "LookupValue");
    private final static QName _Categories_QNAME = new QName("http://www.opengis.net/se", "Categories");
    private final static QName _ExclusionRadius_QNAME = new QName("http://www.opengis.net/se", "ExclusionRadius");
    private final static QName _CompoundStroke_QNAME = new QName("http://www.opengis.net/se", "CompoundStroke");
    private final static QName _Fill_QNAME = new QName("http://www.opengis.net/se", "Fill");
    private final static QName _Histogram_QNAME = new QName("http://www.opengis.net/se", "Histogram");
    private final static QName _ElseFilter_QNAME = new QName("http://www.opengis.net/se", "ElseFilter");
    private final static QName _FontStyle_QNAME = new QName("http://www.opengis.net/se", "FontStyle");
    private final static QName _Percentage_QNAME = new QName("http://www.opengis.net/se", "Percentage");
    private final static QName _DotMapFill_QNAME = new QName("http://www.opengis.net/se", "DotMapFill");
    private final static QName _Rule_QNAME = new QName("http://www.opengis.net/se", "Rule");
    private final static QName _PenStroke_QNAME = new QName("http://www.opengis.net/se", "PenStroke");
    private final static QName _RasterSymbolizer_QNAME = new QName("http://www.opengis.net/se", "RasterSymbolizer");
    private final static QName _Gap_QNAME = new QName("http://www.opengis.net/se", "Gap");
    private final static QName _AreaSymbolizer_QNAME = new QName("http://www.opengis.net/se", "AreaSymbolizer");
    private final static QName _LineLabel_QNAME = new QName("http://www.opengis.net/se", "LineLabel");
    private final static QName _Name_QNAME = new QName("http://www.opengis.net/se", "Name");
    private final static QName _DashOffset_QNAME = new QName("http://www.opengis.net/se", "DashOffset");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.opengis.se
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link AreaSymbolizerType }
     * 
     */
    public AreaSymbolizerType createAreaSymbolizerType() {
        return new AreaSymbolizerType();
    }

    /**
     * Create an instance of {@link ViewBoxType }
     * 
     */
    public ViewBoxType createViewBoxType() {
        return new ViewBoxType();
    }

    /**
     * Create an instance of {@link ElseFilterType }
     * 
     */
    public ElseFilterType createElseFilterType() {
        return new ElseFilterType();
    }

    /**
     * Create an instance of {@link LineLabelType }
     * 
     */
    public LineLabelType createLineLabelType() {
        return new LineLabelType();
    }

    /**
     * Create an instance of {@link InlineContentType }
     * 
     */
    public InlineContentType createInlineContentType() {
        return new InlineContentType();
    }

    /**
     * Create an instance of {@link TextGraphicType }
     * 
     */
    public TextGraphicType createTextGraphicType() {
        return new TextGraphicType();
    }

    /**
     * Create an instance of {@link LegendGraphicType }
     * 
     */
    public LegendGraphicType createLegendGraphicType() {
        return new LegendGraphicType();
    }

    /**
     * Create an instance of {@link RecodeType }
     * 
     */
    public RecodeType createRecodeType() {
        return new RecodeType();
    }

    /**
     * Create an instance of {@link GeometryType }
     * 
     */
    public GeometryType createGeometryType() {
        return new GeometryType();
    }

    /**
     * Create an instance of {@link FontType }
     * 
     */
    public FontType createFontType() {
        return new FontType();
    }

    /**
     * Create an instance of {@link GraphicFillType }
     * 
     */
    public GraphicFillType createGraphicFillType() {
        return new GraphicFillType();
    }

    /**
     * Create an instance of {@link StrokeElementType }
     * 
     */
    public StrokeElementType createStrokeElementType() {
        return new StrokeElementType();
    }

    /**
     * Create an instance of {@link DomainAxisType }
     * 
     */
    public DomainAxisType createDomainAxisType() {
        return new DomainAxisType();
    }

    /**
     * Create an instance of {@link CompositeSymbolizerType }
     * 
     */
    public CompositeSymbolizerType createCompositeSymbolizerType() {
        return new CompositeSymbolizerType();
    }

    /**
     * Create an instance of {@link ColorMapType }
     * 
     */
    public ColorMapType createColorMapType() {
        return new ColorMapType();
    }

    /**
     * Create an instance of {@link InterpolateType }
     * 
     */
    public InterpolateType createInterpolateType() {
        return new InterpolateType();
    }

    /**
     * Create an instance of {@link StyledLabelType }
     * 
     */
    public StyledLabelType createStyledLabelType() {
        return new StyledLabelType();
    }

    /**
     * Create an instance of {@link MapItemType }
     * 
     */
    public MapItemType createMapItemType() {
        return new MapItemType();
    }

    /**
     * Create an instance of {@link InterpolationPointType }
     * 
     */
    public InterpolationPointType createInterpolationPointType() {
        return new InterpolationPointType();
    }

    /**
     * Create an instance of {@link FeatureTypeStyleReferenceType }
     * 
     */
    public FeatureTypeStyleReferenceType createFeatureTypeStyleReferenceType() {
        return new FeatureTypeStyleReferenceType();
    }

    /**
     * Create an instance of {@link UnaryOperatorType }
     * 
     */
    public UnaryOperatorType createUnaryOperatorType() {
        return new UnaryOperatorType();
    }

    /**
     * Create an instance of {@link ChannelSelectionType }
     * 
     */
    public ChannelSelectionType createChannelSelectionType() {
        return new ChannelSelectionType();
    }

    /**
     * Create an instance of {@link FeatureTypeStyleType }
     * 
     */
    public FeatureTypeStyleType createFeatureTypeStyleType() {
        return new FeatureTypeStyleType();
    }

    /**
     * Create an instance of {@link CompositeGraphicType }
     * 
     */
    public CompositeGraphicType createCompositeGraphicType() {
        return new CompositeGraphicType();
    }

    /**
     * Create an instance of {@link RuleType }
     * 
     */
    public RuleType createRuleType() {
        return new RuleType();
    }

    /**
     * Create an instance of {@link StackedBarsType }
     * 
     */
    public StackedBarsType createStackedBarsType() {
        return new StackedBarsType();
    }

    /**
     * Create an instance of {@link PenStrokeType }
     * 
     */
    public PenStrokeType createPenStrokeType() {
        return new PenStrokeType();
    }

    /**
     * Create an instance of {@link SelectedChannelType }
     * 
     */
    public SelectedChannelType createSelectedChannelType() {
        return new SelectedChannelType();
    }

    /**
     * Create an instance of {@link GraphicStrokeType }
     * 
     */
    public GraphicStrokeType createGraphicStrokeType() {
        return new GraphicStrokeType();
    }

    /**
     * Create an instance of {@link DotMapFillType }
     * 
     */
    public DotMapFillType createDotMapFillType() {
        return new DotMapFillType();
    }

    /**
     * Create an instance of {@link RasterSymbolizerType }
     * 
     */
    public RasterSymbolizerType createRasterSymbolizerType() {
        return new RasterSymbolizerType();
    }

    /**
     * Create an instance of {@link ContrastEnhancementType }
     * 
     */
    public ContrastEnhancementType createContrastEnhancementType() {
        return new ContrastEnhancementType();
    }

    /**
     * Create an instance of {@link PieChartType }
     * 
     */
    public PieChartType createPieChartType() {
        return new PieChartType();
    }

    /**
     * Create an instance of {@link MatrixType }
     * 
     */
    public MatrixType createMatrixType() {
        return new MatrixType();
    }

    /**
     * Create an instance of {@link ScaleType }
     * 
     */
    public ScaleType createScaleType() {
        return new ScaleType();
    }

    /**
     * Create an instance of {@link TranslateType }
     * 
     */
    public TranslateType createTranslateType() {
        return new TranslateType();
    }

    /**
     * Create an instance of {@link HaloType }
     * 
     */
    public HaloType createHaloType() {
        return new HaloType();
    }

    /**
     * Create an instance of {@link HatchedFillType }
     * 
     */
    public HatchedFillType createHatchedFillType() {
        return new HatchedFillType();
    }

    /**
     * Create an instance of {@link Content }
     * 
     */
    public Content createContent() {
        return new Content();
    }

    /**
     * Create an instance of {@link TextSymbolizerType }
     * 
     */
    public TextSymbolizerType createTextSymbolizerType() {
        return new TextSymbolizerType();
    }

    /**
     * Create an instance of {@link CategoriesType }
     * 
     */
    public CategoriesType createCategoriesType() {
        return new CategoriesType();
    }

    /**
     * Create an instance of {@link PointLabelType }
     * 
     */
    public PointLabelType createPointLabelType() {
        return new PointLabelType();
    }

    /**
     * Create an instance of {@link TextStrokeType }
     * 
     */
    public TextStrokeType createTextStrokeType() {
        return new TextStrokeType();
    }

    /**
     * Create an instance of {@link TileGapType }
     * 
     */
    public TileGapType createTileGapType() {
        return new TileGapType();
    }

    /**
     * Create an instance of {@link ExternalGraphicType }
     * 
     */
    public ExternalGraphicType createExternalGraphicType() {
        return new ExternalGraphicType();
    }

    /**
     * Create an instance of {@link AlternativeGraphicsType }
     * 
     */
    public AlternativeGraphicsType createAlternativeGraphicsType() {
        return new AlternativeGraphicsType();
    }

    /**
     * Create an instance of {@link ExtensionParameterType }
     * 
     */
    public ExtensionParameterType createExtensionParameterType() {
        return new ExtensionParameterType();
    }

    /**
     * Create an instance of {@link CoverageStyleType }
     * 
     */
    public CoverageStyleType createCoverageStyleType() {
        return new CoverageStyleType();
    }

    /**
     * Create an instance of {@link PolarChartType }
     * 
     */
    public PolarChartType createPolarChartType() {
        return new PolarChartType();
    }

    /**
     * Create an instance of {@link CategorizeType }
     * 
     */
    public CategorizeType createCategorizeType() {
        return new CategorizeType();
    }

    /**
     * Create an instance of {@link PointSymbolizerType }
     * 
     */
    public PointSymbolizerType createPointSymbolizerType() {
        return new PointSymbolizerType();
    }

    /**
     * Create an instance of {@link ExtensionType }
     * 
     */
    public ExtensionType createExtensionType() {
        return new ExtensionType();
    }

    /**
     * Create an instance of {@link AxisScaleType }
     * 
     */
    public AxisScaleType createAxisScaleType() {
        return new AxisScaleType();
    }

    /**
     * Create an instance of {@link ImageOutlineType }
     * 
     */
    public ImageOutlineType createImageOutlineType() {
        return new ImageOutlineType();
    }

    /**
     * Create an instance of {@link SolidFillType }
     * 
     */
    public SolidFillType createSolidFillType() {
        return new SolidFillType();
    }

    /**
     * Create an instance of {@link HistogramType }
     * 
     */
    public HistogramType createHistogramType() {
        return new HistogramType();
    }

    /**
     * Create an instance of {@link LineSymbolizerType }
     * 
     */
    public LineSymbolizerType createLineSymbolizerType() {
        return new LineSymbolizerType();
    }

    /**
     * Create an instance of {@link ArgumentType }
     * 
     */
    public ArgumentType createArgumentType() {
        return new ArgumentType();
    }

    /**
     * Create an instance of {@link MarkGraphicType }
     * 
     */
    public MarkGraphicType createMarkGraphicType() {
        return new MarkGraphicType();
    }

    /**
     * Create an instance of {@link RotateType }
     * 
     */
    public RotateType createRotateType() {
        return new RotateType();
    }

    /**
     * Create an instance of {@link ExclusionRadiusType }
     * 
     */
    public ExclusionRadiusType createExclusionRadiusType() {
        return new ExclusionRadiusType();
    }

    /**
     * Create an instance of {@link SliceType }
     * 
     */
    public SliceType createSliceType() {
        return new SliceType();
    }

    /**
     * Create an instance of {@link ShadedReliefType }
     * 
     */
    public ShadedReliefType createShadedReliefType() {
        return new ShadedReliefType();
    }

    /**
     * Create an instance of {@link CoverageStyleReferenceType }
     * 
     */
    public CoverageStyleReferenceType createCoverageStyleReferenceType() {
        return new CoverageStyleReferenceType();
    }

    /**
     * Create an instance of {@link CompoundStrokeType }
     * 
     */
    public CompoundStrokeType createCompoundStrokeType() {
        return new CompoundStrokeType();
    }

    /**
     * Create an instance of {@link DomainConstraintsType }
     * 
     */
    public DomainConstraintsType createDomainConstraintsType() {
        return new DomainConstraintsType();
    }

    /**
     * Create an instance of {@link ExclusionRectangleType }
     * 
     */
    public ExclusionRectangleType createExclusionRectangleType() {
        return new ExclusionRectangleType();
    }

    /**
     * Create an instance of {@link NormalizeType }
     * 
     */
    public NormalizeType createNormalizeType() {
        return new NormalizeType();
    }

    /**
     * Create an instance of {@link CategoryType }
     * 
     */
    public CategoryType createCategoryType() {
        return new CategoryType();
    }

    /**
     * Create an instance of {@link StackedBarType }
     * 
     */
    public StackedBarType createStackedBarType() {
        return new StackedBarType();
    }

    /**
     * Create an instance of {@link ParameterValueType }
     * 
     */
    public ParameterValueType createParameterValueType() {
        return new ParameterValueType();
    }

    /**
     * Create an instance of {@link ArgumentListType }
     * 
     */
    public ArgumentListType createArgumentListType() {
        return new ArgumentListType();
    }

    /**
     * Create an instance of {@link StrokeAnnotationGraphicType }
     * 
     */
    public StrokeAnnotationGraphicType createStrokeAnnotationGraphicType() {
        return new StrokeAnnotationGraphicType();
    }

    /**
     * Create an instance of {@link DensityFillType }
     * 
     */
    public DensityFillType createDensityFillType() {
        return new DensityFillType();
    }

    /**
     * Create an instance of {@link FormalParametersType }
     * 
     */
    public FormalParametersType createFormalParametersType() {
        return new FormalParametersType();
    }

    /**
     * Create an instance of {@link TransformType }
     * 
     */
    public TransformType createTransformType() {
        return new TransformType();
    }

    /**
     * Create an instance of {@link AlternativeStrokeElementsType }
     * 
     */
    public AlternativeStrokeElementsType createAlternativeStrokeElementsType() {
        return new AlternativeStrokeElementsType();
    }

    /**
     * Create an instance of {@link ParameterType }
     * 
     */
    public ParameterType createParameterType() {
        return new ParameterType();
    }

    /**
     * Create an instance of {@link AxisChartType }
     * 
     */
    public AxisChartType createAxisChartType() {
        return new AxisChartType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "FontSize")
    public JAXBElement<ParameterValueType> createFontSize(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_FontSize_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "CategoryWidth")
    public JAXBElement<ParameterValueType> createCategoryWidth(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_CategoryWidth_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MatrixType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Matrix")
    public JAXBElement<MatrixType> createMatrix(MatrixType value) {
        return new JAXBElement<MatrixType>(_Matrix_QNAME, MatrixType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "WellKnownName")
    public JAXBElement<String> createWellKnownName(String value) {
        return new JAXBElement<String>(_WellKnownName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Key")
    public JAXBElement<String> createKey(String value) {
        return new JAXBElement<String>(_Key_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Format")
    public JAXBElement<String> createFormat(String value) {
        return new JAXBElement<String>(_Format_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TranslateType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Translate")
    public JAXBElement<TranslateType> createTranslate(TranslateType value) {
        return new JAXBElement<TranslateType>(_Translate_QNAME, TranslateType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GeometryType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Geometry")
    public JAXBElement<GeometryType> createGeometry(GeometryType value) {
        return new JAXBElement<GeometryType>(_Geometry_QNAME, GeometryType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "SourceChannelName")
    public JAXBElement<String> createSourceChannelName(String value) {
        return new JAXBElement<String>(_SourceChannelName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PointSymbolizerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "PointSymbolizer", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Symbolizer")
    public JAXBElement<PointSymbolizerType> createPointSymbolizer(PointSymbolizerType value) {
        return new JAXBElement<PointSymbolizerType>(_PointSymbolizer_QNAME, PointSymbolizerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "CategoryGap")
    public JAXBElement<ParameterValueType> createCategoryGap(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_CategoryGap_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "GammaValue")
    public JAXBElement<Double> createGammaValue(Double value) {
        return new JAXBElement<Double>(_GammaValue_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CompositeGraphicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "CompositeGraphic", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Graphic")
    public JAXBElement<CompositeGraphicType> createCompositeGraphic(CompositeGraphicType value) {
        return new JAXBElement<CompositeGraphicType>(_CompositeGraphic_QNAME, CompositeGraphicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "TimePeriod")
    public JAXBElement<String> createTimePeriod(String value) {
        return new JAXBElement<String>(_TimePeriod_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FeatureTypeStyleReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "FeatureTypeStyleReference")
    public JAXBElement<FeatureTypeStyleReferenceType> createFeatureTypeStyleReference(FeatureTypeStyleReferenceType value) {
        return new JAXBElement<FeatureTypeStyleReferenceType>(_FeatureTypeStyleReference_QNAME, FeatureTypeStyleReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PieSubtypeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "PieSubtype")
    public JAXBElement<PieSubtypeType> createPieSubtype(PieSubtypeType value) {
        return new JAXBElement<PieSubtypeType>(_PieSubtype_QNAME, PieSubtypeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "FirstValue")
    public JAXBElement<ParameterValueType> createFirstValue(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_FirstValue_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Rotation")
    public JAXBElement<ParameterValueType> createRotation(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Rotation_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StrokeElementType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "StrokeElement")
    public JAXBElement<StrokeElementType> createStrokeElement(StrokeElementType value) {
        return new JAXBElement<StrokeElementType>(_StrokeElement_QNAME, StrokeElementType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "E")
    public JAXBElement<ParameterValueType> createE(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_E_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "D")
    public JAXBElement<ParameterValueType> createD(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_D_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "F")
    public JAXBElement<ParameterValueType> createF(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_F_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "A")
    public JAXBElement<ParameterValueType> createA(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_A_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "C")
    public JAXBElement<ParameterValueType> createC(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_C_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "B")
    public JAXBElement<ParameterValueType> createB(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_B_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RotateType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Rotate")
    public JAXBElement<RotateType> createRotate(RotateType value) {
        return new JAXBElement<RotateType>(_Rotate_QNAME, RotateType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FeatureTypeStyleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "FeatureTypeStyle")
    public JAXBElement<FeatureTypeStyleType> createFeatureTypeStyle(FeatureTypeStyleType value) {
        return new JAXBElement<FeatureTypeStyleType>(_FeatureTypeStyle_QNAME, FeatureTypeStyleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "OverlapBehavior")
    public JAXBElement<String> createOverlapBehavior(String value) {
        return new JAXBElement<String>(_OverlapBehavior_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "X")
    public JAXBElement<ParameterValueType> createX(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_X_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Y")
    public JAXBElement<ParameterValueType> createY(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Y_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "UnitOfMeasure")
    public JAXBElement<String> createUnitOfMeasure(String value) {
        return new JAXBElement<String>(_UnitOfMeasure_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterpolateType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Interpolate", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Function")
    public JAXBElement<InterpolateType> createInterpolate(InterpolateType value) {
        return new JAXBElement<InterpolateType>(_Interpolate_QNAME, InterpolateType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DensityFillType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "DensityFill", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Fill")
    public JAXBElement<DensityFillType> createDensityFill(DensityFillType value) {
        return new JAXBElement<DensityFillType>(_DensityFill_QNAME, DensityFillType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StackedBarType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "StackedBar")
    public JAXBElement<StackedBarType> createStackedBar(StackedBarType value) {
        return new JAXBElement<StackedBarType>(_StackedBar_QNAME, StackedBarType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ColorMapType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ColorMap")
    public JAXBElement<ColorMapType> createColorMap(ColorMapType value) {
        return new JAXBElement<ColorMapType>(_ColorMap_QNAME, ColorMapType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CoverageStyleReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "CoverageStyleReference")
    public JAXBElement<CoverageStyleReferenceType> createCoverageStyleReference(CoverageStyleReferenceType value) {
        return new JAXBElement<CoverageStyleReferenceType>(_CoverageStyleReference_QNAME, CoverageStyleReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Orientation")
    public JAXBElement<ParameterValueType> createOrientation(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Orientation_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StrokeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Stroke")
    public JAXBElement<StrokeType> createStroke(StrokeType value) {
        return new JAXBElement<StrokeType>(_Stroke_QNAME, StrokeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Function", substitutionHeadNamespace = "http://www.opengis.net/ogc", substitutionHeadName = "expression")
    public JAXBElement<FunctionType> createFunction(FunctionType value) {
        return new JAXBElement<FunctionType>(_Function_QNAME, FunctionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ViewBoxType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ViewBox")
    public JAXBElement<ViewBoxType> createViewBox(ViewBoxType value) {
        return new JAXBElement<ViewBoxType>(_ViewBox_QNAME, ViewBoxType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LabelType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Label")
    public JAXBElement<LabelType> createLabel(LabelType value) {
        return new JAXBElement<LabelType>(_Label_QNAME, LabelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArgumentListType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ArgumentList")
    public JAXBElement<ArgumentListType> createArgumentList(ArgumentListType value) {
        return new JAXBElement<ArgumentListType>(_ArgumentList_QNAME, ArgumentListType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "FontFamily")
    public JAXBElement<ParameterValueType> createFontFamily(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_FontFamily_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CompositeSymbolizerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "CompositeSymbolizer", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Symbolizer")
    public JAXBElement<CompositeSymbolizerType> createCompositeSymbolizer(CompositeSymbolizerType value) {
        return new JAXBElement<CompositeSymbolizerType>(_CompositeSymbolizer_QNAME, CompositeSymbolizerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Radius")
    public JAXBElement<ParameterValueType> createRadius(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Radius_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExternalGraphicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ExternalGraphic", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Graphic")
    public JAXBElement<ExternalGraphicType> createExternalGraphic(ExternalGraphicType value) {
        return new JAXBElement<ExternalGraphicType>(_ExternalGraphic_QNAME, ExternalGraphicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ScaleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Scale")
    public JAXBElement<ScaleType> createScale(ScaleType value) {
        return new JAXBElement<ScaleType>(_Scale_QNAME, ScaleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TileGapType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "TileGap")
    public JAXBElement<TileGapType> createTileGap(TileGapType value) {
        return new JAXBElement<TileGapType>(_TileGap_QNAME, TileGapType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "LineJoin")
    public JAXBElement<ParameterValueType> createLineJoin(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_LineJoin_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Version")
    public JAXBElement<String> createVersion(String value) {
        return new JAXBElement<String>(_Version_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "SemanticTypeIdentifier")
    public JAXBElement<String> createSemanticTypeIdentifier(String value) {
        return new JAXBElement<String>(_SemanticTypeIdentifier_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExtensionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Extension")
    public JAXBElement<ExtensionType> createExtension(ExtensionType value) {
        return new JAXBElement<ExtensionType>(_Extension_QNAME, ExtensionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Normalization")
    public JAXBElement<ParameterValueType> createNormalization(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Normalization_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExclusionRectangleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ExclusionRectangle", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "ExclusionZone")
    public JAXBElement<ExclusionRectangleType> createExclusionRectangle(ExclusionRectangleType value) {
        return new JAXBElement<ExclusionRectangleType>(_ExclusionRectangle_QNAME, ExclusionRectangleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "FontWeight")
    public JAXBElement<ParameterValueType> createFontWeight(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_FontWeight_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "LineCap")
    public JAXBElement<ParameterValueType> createLineCap(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_LineCap_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CoverageStyleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "CoverageStyle")
    public JAXBElement<CoverageStyleType> createCoverageStyle(CoverageStyleType value) {
        return new JAXBElement<CoverageStyleType>(_CoverageStyle_QNAME, CoverageStyleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SelectedChannelType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "GrayChannel")
    public JAXBElement<SelectedChannelType> createGrayChannel(SelectedChannelType value) {
        return new JAXBElement<SelectedChannelType>(_GrayChannel_QNAME, SelectedChannelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LegendGraphicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "LegendGraphic")
    public JAXBElement<LegendGraphicType> createLegendGraphic(LegendGraphicType value) {
        return new JAXBElement<LegendGraphicType>(_LegendGraphic_QNAME, LegendGraphicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Value")
    public JAXBElement<ParameterValueType> createValue(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Value_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Distance")
    public JAXBElement<ParameterValueType> createDistance(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Distance_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TextSymbolizerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "TextSymbolizer", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Symbolizer")
    public JAXBElement<TextSymbolizerType> createTextSymbolizer(TextSymbolizerType value) {
        return new JAXBElement<TextSymbolizerType>(_TextSymbolizer_QNAME, TextSymbolizerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ValueToRepresent")
    public JAXBElement<ParameterValueType> createValueToRepresent(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_ValueToRepresent_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PieChartType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "PieChart", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Graphic")
    public JAXBElement<PieChartType> createPieChart(PieChartType value) {
        return new JAXBElement<PieChartType>(_PieChart_QNAME, PieChartType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterpolationPointType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "InterpolationPoint")
    public JAXBElement<InterpolationPointType> createInterpolationPoint(InterpolationPointType value) {
        return new JAXBElement<InterpolationPointType>(_InterpolationPoint_QNAME, InterpolationPointType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MarkGraphicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "MarkGraphic", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Graphic")
    public JAXBElement<MarkGraphicType> createMarkGraphic(MarkGraphicType value) {
        return new JAXBElement<MarkGraphicType>(_MarkGraphic_QNAME, MarkGraphicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SelectedChannelType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "RedChannel")
    public JAXBElement<SelectedChannelType> createRedChannel(SelectedChannelType value) {
        return new JAXBElement<SelectedChannelType>(_RedChannel_QNAME, SelectedChannelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "VerticalAlignment")
    public JAXBElement<ParameterValueType> createVerticalAlignment(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_VerticalAlignment_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UnaryOperatorType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Log10", substitutionHeadNamespace = "http://www.opengis.net/ogc", substitutionHeadName = "expression")
    public JAXBElement<UnaryOperatorType> createLog10(UnaryOperatorType value) {
        return new JAXBElement<UnaryOperatorType>(_Log10_QNAME, UnaryOperatorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InlineContentType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "InlineContent")
    public JAXBElement<InlineContentType> createInlineContent(InlineContentType value) {
        return new JAXBElement<InlineContentType>(_InlineContent_QNAME, InlineContentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NormalizeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Normalize")
    public JAXBElement<NormalizeType> createNormalize(NormalizeType value) {
        return new JAXBElement<NormalizeType>(_Normalize_QNAME, NormalizeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "DomainValue")
    public JAXBElement<String> createDomainValue(String value) {
        return new JAXBElement<String>(_DomainValue_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "MaxScaleDenominator")
    public JAXBElement<Double> createMaxScaleDenominator(Double value) {
        return new JAXBElement<Double>(_MaxScaleDenominator_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GraphicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Graphic")
    public JAXBElement<GraphicType> createGraphic(GraphicType value) {
        return new JAXBElement<GraphicType>(_Graphic_QNAME, GraphicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Encoding")
    public JAXBElement<String> createEncoding(String value) {
        return new JAXBElement<String>(_Encoding_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExtensionParameterType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ExtensionParameter")
    public JAXBElement<ExtensionParameterType> createExtensionParameter(ExtensionParameterType value) {
        return new JAXBElement<ExtensionParameterType>(_ExtensionParameter_QNAME, ExtensionParameterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Parameter")
    public JAXBElement<ParameterType> createParameter(ParameterType value) {
        return new JAXBElement<ParameterType>(_Parameter_QNAME, ParameterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Angle")
    public JAXBElement<ParameterValueType> createAngle(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Angle_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TransformType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Transform")
    public JAXBElement<TransformType> createTransform(TransformType value) {
        return new JAXBElement<TransformType>(_Transform_QNAME, TransformType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AlternativeStrokeElementsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "AlternativeStrokeElements")
    public JAXBElement<AlternativeStrokeElementsType> createAlternativeStrokeElements(AlternativeStrokeElementsType value) {
        return new JAXBElement<AlternativeStrokeElementsType>(_AlternativeStrokeElements_QNAME, AlternativeStrokeElementsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Threshold")
    public JAXBElement<ParameterValueType> createThreshold(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Threshold_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StackedBarsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "StackedBars")
    public JAXBElement<StackedBarsType> createStackedBars(StackedBarsType value) {
        return new JAXBElement<StackedBarsType>(_StackedBars_QNAME, StackedBarsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelativeOrientationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "RelativeOrientation")
    public JAXBElement<RelativeOrientationType> createRelativeOrientation(RelativeOrientationType value) {
        return new JAXBElement<RelativeOrientationType>(_RelativeOrientation_QNAME, RelativeOrientationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UnaryOperatorType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Sqrt", substitutionHeadNamespace = "http://www.opengis.net/ogc", substitutionHeadName = "expression")
    public JAXBElement<UnaryOperatorType> createSqrt(UnaryOperatorType value) {
        return new JAXBElement<UnaryOperatorType>(_Sqrt_QNAME, UnaryOperatorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MapItemType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "MapItem")
    public JAXBElement<MapItemType> createMapItem(MapItemType value) {
        return new JAXBElement<MapItemType>(_MapItem_QNAME, MapItemType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DescriptionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Description")
    public JAXBElement<DescriptionType> createDescription(DescriptionType value) {
        return new JAXBElement<DescriptionType>(_Description_QNAME, DescriptionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DomainConstraintsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "DomainConstraints")
    public JAXBElement<DomainConstraintsType> createDomainConstraints(DomainConstraintsType value) {
        return new JAXBElement<DomainConstraintsType>(_DomainConstraints_QNAME, DomainConstraintsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GraphicStrokeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "GraphicStroke", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Stroke")
    public JAXBElement<GraphicStrokeType> createGraphicStroke(GraphicStrokeType value) {
        return new JAXBElement<GraphicStrokeType>(_GraphicStroke_QNAME, GraphicStrokeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TextGraphicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "TextGraphic", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Graphic")
    public JAXBElement<TextGraphicType> createTextGraphic(TextGraphicType value) {
        return new JAXBElement<TextGraphicType>(_TextGraphic_QNAME, TextGraphicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CategoryType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Category")
    public JAXBElement<CategoryType> createCategory(CategoryType value) {
        return new JAXBElement<CategoryType>(_Category_QNAME, CategoryType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SelectedChannelType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "BlueChannel")
    public JAXBElement<SelectedChannelType> createBlueChannel(SelectedChannelType value) {
        return new JAXBElement<SelectedChannelType>(_BlueChannel_QNAME, SelectedChannelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LineSymbolizerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "LineSymbolizer", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Symbolizer")
    public JAXBElement<LineSymbolizerType> createLineSymbolizer(LineSymbolizerType value) {
        return new JAXBElement<LineSymbolizerType>(_LineSymbolizer_QNAME, LineSymbolizerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "LabelText")
    public JAXBElement<ParameterValueType> createLabelText(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_LabelText_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChannelSelectionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ChannelSelection")
    public JAXBElement<ChannelSelectionType> createChannelSelection(ChannelSelectionType value) {
        return new JAXBElement<ChannelSelectionType>(_ChannelSelection_QNAME, ChannelSelectionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StyledLabelType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "StyledLabel")
    public JAXBElement<StyledLabelType> createStyledLabel(StyledLabelType value) {
        return new JAXBElement<StyledLabelType>(_StyledLabel_QNAME, StyledLabelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Data")
    public JAXBElement<Double> createData(Double value) {
        return new JAXBElement<Double>(_Data_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PolarChartType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "PolarChart")
    public JAXBElement<PolarChartType> createPolarChart(PolarChartType value) {
        return new JAXBElement<PolarChartType>(_PolarChart_QNAME, PolarChartType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Opacity")
    public JAXBElement<ParameterValueType> createOpacity(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Opacity_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Color")
    public JAXBElement<ParameterValueType> createColor(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Color_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CategorizeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Categorize", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Function")
    public JAXBElement<CategorizeType> createCategorize(CategorizeType value) {
        return new JAXBElement<CategorizeType>(_Categorize_QNAME, CategorizeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PointLabelType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "PointLabel", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Label")
    public JAXBElement<PointLabelType> createPointLabel(PointLabelType value) {
        return new JAXBElement<PointLabelType>(_PointLabel_QNAME, PointLabelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SolidFillType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "SolidFill", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Fill")
    public JAXBElement<SolidFillType> createSolidFill(SolidFillType value) {
        return new JAXBElement<SolidFillType>(_SolidFill_QNAME, SolidFillType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AxisChartType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "AxisChart", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Graphic")
    public JAXBElement<AxisChartType> createAxisChart(AxisChartType value) {
        return new JAXBElement<AxisChartType>(_AxisChart_QNAME, AxisChartType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ShadedReliefType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ShadedRelief")
    public JAXBElement<ShadedReliefType> createShadedRelief(ShadedReliefType value) {
        return new JAXBElement<ShadedReliefType>(_ShadedRelief_QNAME, ShadedReliefType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "PostGap")
    public JAXBElement<ParameterValueType> createPostGap(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_PostGap_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ReliefFactor")
    public JAXBElement<Double> createReliefFactor(Double value) {
        return new JAXBElement<Double>(_ReliefFactor_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StrokeAnnotationGraphicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "StrokeAnnotationGraphic")
    public JAXBElement<StrokeAnnotationGraphicType> createStrokeAnnotationGraphic(StrokeAnnotationGraphicType value) {
        return new JAXBElement<StrokeAnnotationGraphicType>(_StrokeAnnotationGraphic_QNAME, StrokeAnnotationGraphicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GraphicFillType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "GraphicFill", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Fill")
    public JAXBElement<GraphicFillType> createGraphicFill(GraphicFillType value) {
        return new JAXBElement<GraphicFillType>(_GraphicFill_QNAME, GraphicFillType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AxisScaleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "AxisScale")
    public JAXBElement<AxisScaleType> createAxisScale(AxisScaleType value) {
        return new JAXBElement<AxisScaleType>(_AxisScale_QNAME, AxisScaleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HatchedFillType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "HatchedFill", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Fill")
    public JAXBElement<HatchedFillType> createHatchedFill(HatchedFillType value) {
        return new JAXBElement<HatchedFillType>(_HatchedFill_QNAME, HatchedFillType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "PerpendicularOffset")
    public JAXBElement<ParameterValueType> createPerpendicularOffset(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_PerpendicularOffset_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OnlineResourceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "OnlineResource")
    public JAXBElement<OnlineResourceType> createOnlineResource(OnlineResourceType value) {
        return new JAXBElement<OnlineResourceType>(_OnlineResource_QNAME, OnlineResourceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "PreGap")
    public JAXBElement<ParameterValueType> createPreGap(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_PreGap_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FontType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Font")
    public JAXBElement<FontType> createFont(FontType value) {
        return new JAXBElement<FontType>(_Font_QNAME, FontType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContrastEnhancementType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ContrastEnhancement")
    public JAXBElement<ContrastEnhancementType> createContrastEnhancement(ContrastEnhancementType value) {
        return new JAXBElement<ContrastEnhancementType>(_ContrastEnhancement_QNAME, ContrastEnhancementType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TextStrokeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "TextStroke", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Stroke")
    public JAXBElement<TextStrokeType> createTextStroke(TextStrokeType value) {
        return new JAXBElement<TextStrokeType>(_TextStroke_QNAME, TextStrokeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SliceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Slice")
    public JAXBElement<SliceType> createSlice(SliceType value) {
        return new JAXBElement<SliceType>(_Slice_QNAME, SliceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ValuePerMark")
    public JAXBElement<ParameterValueType> createValuePerMark(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_ValuePerMark_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "BrightnessOnly")
    public JAXBElement<Boolean> createBrightnessOnly(Boolean value) {
        return new JAXBElement<Boolean>(_BrightnessOnly_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "HoleRadius")
    public JAXBElement<ParameterValueType> createHoleRadius(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_HoleRadius_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExclusionZoneType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ExclusionZone")
    public JAXBElement<ExclusionZoneType> createExclusionZone(ExclusionZoneType value) {
        return new JAXBElement<ExclusionZoneType>(_ExclusionZone_QNAME, ExclusionZoneType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "DashArray")
    public JAXBElement<ParameterValueType> createDashArray(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_DashArray_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SelectedChannelType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "GreenChannel")
    public JAXBElement<SelectedChannelType> createGreenChannel(SelectedChannelType value) {
        return new JAXBElement<SelectedChannelType>(_GreenChannel_QNAME, SelectedChannelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Length")
    public JAXBElement<ParameterValueType> createLength(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Length_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HaloType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Halo")
    public JAXBElement<HaloType> createHalo(HaloType value) {
        return new JAXBElement<HaloType>(_Halo_QNAME, HaloType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "MinScaleDenominator")
    public JAXBElement<Double> createMinScaleDenominator(Double value) {
        return new JAXBElement<Double>(_MinScaleDenominator_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Measure")
    public JAXBElement<ParameterValueType> createMeasure(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Measure_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "MarkIndex")
    public JAXBElement<ParameterValueType> createMarkIndex(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_MarkIndex_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Offset")
    public JAXBElement<ParameterValueType> createOffset(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Offset_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DomainAxisType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "DomainAxis")
    public JAXBElement<DomainAxisType> createDomainAxis(DomainAxisType value) {
        return new JAXBElement<DomainAxisType>(_DomainAxis_QNAME, DomainAxisType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Width")
    public JAXBElement<ParameterValueType> createWidth(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Width_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SymbolizerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Symbolizer")
    public JAXBElement<SymbolizerType> createSymbolizer(SymbolizerType value) {
        return new JAXBElement<SymbolizerType>(_Symbolizer_QNAME, SymbolizerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link QName }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "FeatureTypeName")
    public JAXBElement<QName> createFeatureTypeName(QName value) {
        return new JAXBElement<QName>(_FeatureTypeName_QNAME, QName.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ImageOutlineType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ImageOutline")
    public JAXBElement<ImageOutlineType> createImageOutline(ImageOutlineType value) {
        return new JAXBElement<ImageOutlineType>(_ImageOutline_QNAME, ImageOutlineType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Height")
    public JAXBElement<ParameterValueType> createHeight(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Height_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AlternativeGraphicsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "AlternativeGraphics", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Graphic")
    public JAXBElement<AlternativeGraphicsType> createAlternativeGraphics(AlternativeGraphicsType value) {
        return new JAXBElement<AlternativeGraphicsType>(_AlternativeGraphics_QNAME, AlternativeGraphicsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "CoverageName")
    public JAXBElement<String> createCoverageName(String value) {
        return new JAXBElement<String>(_CoverageName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "XY")
    public JAXBElement<ParameterValueType> createXY(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_XY_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FormalParametersType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "FormalParameters")
    public JAXBElement<FormalParametersType> createFormalParameters(FormalParametersType value) {
        return new JAXBElement<FormalParametersType>(_FormalParameters_QNAME, FormalParametersType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "RelativePosition")
    public JAXBElement<ParameterValueType> createRelativePosition(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_RelativePosition_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "AxisLength")
    public JAXBElement<ParameterValueType> createAxisLength(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_AxisLength_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArgumentType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Argument")
    public JAXBElement<ArgumentType> createArgument(ArgumentType value) {
        return new JAXBElement<ArgumentType>(_Argument_QNAME, ArgumentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RecodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Recode", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Function")
    public JAXBElement<RecodeType> createRecode(RecodeType value) {
        return new JAXBElement<RecodeType>(_Recode_QNAME, RecodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "HorizontalAlignment")
    public JAXBElement<ParameterValueType> createHorizontalAlignment(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_HorizontalAlignment_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "LookupValue")
    public JAXBElement<ParameterValueType> createLookupValue(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_LookupValue_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CategoriesType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Categories")
    public JAXBElement<CategoriesType> createCategories(CategoriesType value) {
        return new JAXBElement<CategoriesType>(_Categories_QNAME, CategoriesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExclusionRadiusType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ExclusionRadius", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "ExclusionZone")
    public JAXBElement<ExclusionRadiusType> createExclusionRadius(ExclusionRadiusType value) {
        return new JAXBElement<ExclusionRadiusType>(_ExclusionRadius_QNAME, ExclusionRadiusType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CompoundStrokeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "CompoundStroke", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Stroke")
    public JAXBElement<CompoundStrokeType> createCompoundStroke(CompoundStrokeType value) {
        return new JAXBElement<CompoundStrokeType>(_CompoundStroke_QNAME, CompoundStrokeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FillType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Fill")
    public JAXBElement<FillType> createFill(FillType value) {
        return new JAXBElement<FillType>(_Fill_QNAME, FillType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HistogramType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Histogram")
    public JAXBElement<HistogramType> createHistogram(HistogramType value) {
        return new JAXBElement<HistogramType>(_Histogram_QNAME, HistogramType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElseFilterType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "ElseFilter")
    public JAXBElement<ElseFilterType> createElseFilter(ElseFilterType value) {
        return new JAXBElement<ElseFilterType>(_ElseFilter_QNAME, ElseFilterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "FontStyle")
    public JAXBElement<ParameterValueType> createFontStyle(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_FontStyle_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Percentage")
    public JAXBElement<ParameterValueType> createPercentage(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Percentage_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DotMapFillType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "DotMapFill", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Fill")
    public JAXBElement<DotMapFillType> createDotMapFill(DotMapFillType value) {
        return new JAXBElement<DotMapFillType>(_DotMapFill_QNAME, DotMapFillType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RuleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Rule")
    public JAXBElement<RuleType> createRule(RuleType value) {
        return new JAXBElement<RuleType>(_Rule_QNAME, RuleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PenStrokeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "PenStroke", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Stroke")
    public JAXBElement<PenStrokeType> createPenStroke(PenStrokeType value) {
        return new JAXBElement<PenStrokeType>(_PenStroke_QNAME, PenStrokeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RasterSymbolizerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "RasterSymbolizer", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Symbolizer")
    public JAXBElement<RasterSymbolizerType> createRasterSymbolizer(RasterSymbolizerType value) {
        return new JAXBElement<RasterSymbolizerType>(_RasterSymbolizer_QNAME, RasterSymbolizerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Gap")
    public JAXBElement<ParameterValueType> createGap(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_Gap_QNAME, ParameterValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AreaSymbolizerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "AreaSymbolizer", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Symbolizer")
    public JAXBElement<AreaSymbolizerType> createAreaSymbolizer(AreaSymbolizerType value) {
        return new JAXBElement<AreaSymbolizerType>(_AreaSymbolizer_QNAME, AreaSymbolizerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LineLabelType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "LineLabel", substitutionHeadNamespace = "http://www.opengis.net/se", substitutionHeadName = "Label")
    public JAXBElement<LineLabelType> createLineLabel(LineLabelType value) {
        return new JAXBElement<LineLabelType>(_LineLabel_QNAME, LineLabelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "Name")
    public JAXBElement<String> createName(String value) {
        return new JAXBElement<String>(_Name_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ParameterValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/se", name = "DashOffset")
    public JAXBElement<ParameterValueType> createDashOffset(ParameterValueType value) {
        return new JAXBElement<ParameterValueType>(_DashOffset_QNAME, ParameterValueType.class, null, value);
    }

}
