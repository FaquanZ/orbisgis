//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.11.21 at 11:01:34 AM CET 
//


package net.opengis.sld._2;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;
import net.opengis.se._2_0.core.AbstractStyleType;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the net.opengis.sld._2 package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _DataSource_QNAME = new QName("http://www.opengis.net/sld/2.0", "DataSource");
    private final static QName _Style_QNAME = new QName("http://www.opengis.net/sld/2.0", "Style");
    private final static QName _NamedStyle_QNAME = new QName("http://www.opengis.net/sld/2.0", "NamedStyle");
    private final static QName _UserDefinedSymbolization_QNAME = new QName("http://www.opengis.net/sld/2.0", "UserDefinedSymbolization");
    private final static QName _InlineFeatureCollection_QNAME = new QName("http://www.opengis.net/sld/2.0", "InlineFeatureCollection");
    private final static QName _UserStyle_QNAME = new QName("http://www.opengis.net/sld/2.0", "UserStyle");
    private final static QName _IsDefault_QNAME = new QName("http://www.opengis.net/sld/2.0", "IsDefault");
    private final static QName _StyledLayerDescriptor_QNAME = new QName("http://www.opengis.net/sld/2.0", "StyledLayerDescriptor");
    private final static QName _ExternalDataSource_QNAME = new QName("http://www.opengis.net/sld/2.0", "ExternalDataSource");
    private final static QName _DataSourceType_QNAME = new QName("http://www.opengis.net/sld/2.0", "DataSourceType");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.opengis.sld._2
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ExternalDataSourceType }
     * 
     */
    public ExternalDataSourceType createExternalDataSourceType() {
        return new ExternalDataSourceType();
    }

    /**
     * Create an instance of {@link StyledLayerDescriptorType }
     * 
     */
    public StyledLayerDescriptorType createStyledLayerDescriptorType() {
        return new StyledLayerDescriptorType();
    }

    /**
     * Create an instance of {@link NamedStyle }
     * 
     */
    public NamedStyle createNamedStyle() {
        return new NamedStyle();
    }

    /**
     * Create an instance of {@link Layer }
     * 
     */
    public Layer createLayer() {
        return new Layer();
    }

    /**
     * Create an instance of {@link InlineFeatureCollectionType }
     * 
     */
    public InlineFeatureCollectionType createInlineFeatureCollectionType() {
        return new InlineFeatureCollectionType();
    }

    /**
     * Create an instance of {@link UseSLDLibrary }
     * 
     */
    public UseSLDLibrary createUseSLDLibrary() {
        return new UseSLDLibrary();
    }

    /**
     * Create an instance of {@link UserStyle }
     * 
     */
    public UserStyle createUserStyle() {
        return new UserStyle();
    }

    /**
     * Create an instance of {@link UserDefinedSymbolization }
     * 
     */
    public UserDefinedSymbolization createUserDefinedSymbolization() {
        return new UserDefinedSymbolization();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataSourceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/sld/2.0", name = "DataSource")
    public JAXBElement<DataSourceType> createDataSource(DataSourceType value) {
        return new JAXBElement<DataSourceType>(_DataSource_QNAME, DataSourceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StyleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/sld/2.0", name = "Style")
    public JAXBElement<StyleType> createStyle(StyleType value) {
        return new JAXBElement<StyleType>(_Style_QNAME, StyleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NamedStyle }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/sld/2.0", name = "NamedStyle", substitutionHeadNamespace = "http://www.opengis.net/sld/2.0", substitutionHeadName = "Style")
    public JAXBElement<NamedStyle> createNamedStyle(NamedStyle value) {
        return new JAXBElement<NamedStyle>(_NamedStyle_QNAME, NamedStyle.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UserDefinedSymbolization }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/sld/2.0", name = "UserDefinedSymbolization", substitutionHeadNamespace = "http://www.opengis.net/wms/2.0", substitutionHeadName = "_ExtendedCapabilities")
    public JAXBElement<UserDefinedSymbolization> createUserDefinedSymbolization(UserDefinedSymbolization value) {
        return new JAXBElement<UserDefinedSymbolization>(_UserDefinedSymbolization_QNAME, UserDefinedSymbolization.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InlineFeatureCollectionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/sld/2.0", name = "InlineFeatureCollection", substitutionHeadNamespace = "http://www.opengis.net/sld/2.0", substitutionHeadName = "DataSource")
    public JAXBElement<InlineFeatureCollectionType> createInlineFeatureCollection(InlineFeatureCollectionType value) {
        return new JAXBElement<InlineFeatureCollectionType>(_InlineFeatureCollection_QNAME, InlineFeatureCollectionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UserStyle }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/sld/2.0", name = "UserStyle", substitutionHeadNamespace = "http://www.opengis.net/sld/2.0", substitutionHeadName = "Style")
    public JAXBElement<UserStyle> createUserStyle(UserStyle value) {
        return new JAXBElement<UserStyle>(_UserStyle_QNAME, UserStyle.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/sld/2.0", name = "IsDefault")
    public JAXBElement<Boolean> createIsDefault(Boolean value) {
        return new JAXBElement<Boolean>(_IsDefault_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StyledLayerDescriptorType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/sld/2.0", name = "StyledLayerDescriptor", substitutionHeadNamespace = "http://www.opengis.net/wms/2.0", substitutionHeadName = "_StyledLayers")
    public JAXBElement<StyledLayerDescriptorType> createStyledLayerDescriptor(StyledLayerDescriptorType value) {
        return new JAXBElement<StyledLayerDescriptorType>(_StyledLayerDescriptor_QNAME, StyledLayerDescriptorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExternalDataSourceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/sld/2.0", name = "ExternalDataSource", substitutionHeadNamespace = "http://www.opengis.net/sld/2.0", substitutionHeadName = "DataSource")
    public JAXBElement<ExternalDataSourceType> createExternalDataSource(ExternalDataSourceType value) {
        return new JAXBElement<ExternalDataSourceType>(_ExternalDataSource_QNAME, ExternalDataSourceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/sld/2.0", name = "DataSourceType")
    public JAXBElement<String> createDataSourceType(String value) {
        return new JAXBElement<String>(_DataSourceType_QNAME, String.class, null, value);
    }
}
