<?xml version="1.0" encoding="ISO-8859-1"?>
<menu>

  <menu label="Landcover indicators">
    <menuItem label="Building density">
      <sqlBlock>
        <comment>Calculate the building density of a layer according to a
				grid</comment>
        <sqlInstr>select register('grid');</sqlInstr>
        <sqlInstr>create table grid as select creategrid(500, 500) from
				bati;</sqlInstr>
        <sqlInstr>select register('gridIntersectWithBati');</sqlInstr>
        <sqlInstr>create table gridIntersectWithBati as select
				intersection(a.the_geom,b.the_geom), a.index from grid a, bati b where
				isValid(b.the_geom) and
				intersects(a.the_geom,b.the_geom);</sqlInstr>
        <sqlInstr>select register('unionGridBati');</sqlInstr>
        <sqlInstr>create table unionGridBati as select geomunion(the_geom),index
				from gridIntersectWithBati group by index;</sqlInstr>
        <sqlInstr>select register('batiDensityPerCell');</sqlInstr>
        <sqlInstr>create table batiDensityPerCell as select area(the_geom) as
				Area,index from unionGridBati;</sqlInstr>
        <sqlInstr>select register('density');</sqlInstr>
        <sqlInstr>create table density as select a.the_geom, a.index,
				b.Area/area(a.the_geom) from grid as a,batiDensityPerCell as b where
				a.index=b.index</sqlInstr>
      </sqlBlock>
    </menuItem>
    <menuItem label="Grass density">
      <sqlBlock>
        <comment>Calculate the grass density of a layer according to a grid</comment>
        <sqlInstr>select register('grid');</sqlInstr>
        <sqlInstr>create table grid as select creategrid(500, 500) from
				vegetation;</sqlInstr>
        <sqlInstr>select register('gridIntersectWithVegetation');</sqlInstr>
        <sqlInstr>create table gridIntersectWithVegetation as select
				intersection(a.the_geom,b.the_geom), a.index from grid a, vegetation b
				where isValid(b.the_geom) and
				intersects(a.the_geom,b.the_geom);</sqlInstr>
        <sqlInstr>select register('unionGridVegetation');</sqlInstr>
        <sqlInstr>create table unionGridVegetation as select
				geomunion(the_geom),index from gridIntersectWithVegetation group by
				index;</sqlInstr>
        <sqlInstr>select register('vegetationDensityPerCell');</sqlInstr>
        <sqlInstr>create table vegetationDensityPerCell as select area(the_geom)
				as Area,index from unionGridVegetation;</sqlInstr>
        <sqlInstr>select register('density');</sqlInstr>
        <sqlInstr>create table density as select a.the_geom, a.index,
				b.Area/area(a.the_geom) from grid as a,vegetationDensityPerCell as b
				where a.index=b.index</sqlInstr>
      </sqlBlock>
    </menuItem>
    <menuItem label="Road density">
      <sqlBlock>
        <comment>Calculate the road density of a layer according to a grid</comment>
        <sqlInstr>select register('grid');</sqlInstr>
        <sqlInstr>create table grid as select creategrid(500, 500) from
				road;</sqlInstr>
        <sqlInstr>select register('gridIntersectWithRoad');</sqlInstr>
        <sqlInstr>create table gridIntersectWithRoad as select
				intersection(a.the_geom,b.the_geom), a.index from grid a, road b where
				isValid(b.the_geom) and
				intersects(a.the_geom,b.the_geom);</sqlInstr>
        <sqlInstr>select register('unionGridRoad');</sqlInstr>
        <sqlInstr>create table unionGridRoad as select geomunion(the_geom),index
				from gridIntersectWithRoad group by index;</sqlInstr>
        <sqlInstr>select register('roadDensityPerCell');</sqlInstr>
        <sqlInstr>create table roadDensityPerCell as select area(the_geom) as
				Area,index from unionGridRoad;</sqlInstr>
        <sqlInstr>select register('density');</sqlInstr>
        <sqlInstr>create table density as select a.the_geom, a.index,
				b.Area/area(a.the_geom) from grid as a,roadDensityPerCell as b where
				a.index=b.index</sqlInstr>
      </sqlBlock>
    </menuItem>
    <menuItem label="Water density">
      <sqlBlock>
        <comment>Calculate the water density of a layer according to a grid</comment>
        <sqlInstr>select register('grid');</sqlInstr>
        <sqlInstr>create table grid as select creategrid(500, 500) from
				water;</sqlInstr>
        <sqlInstr>select register('gridIntersectWithWater');</sqlInstr>
        <sqlInstr>create table gridIntersectWithWater as select
				intersection(a.the_geom,b.the_geom), a.index from grid a, water b where
				isValid(b.the_geom) and
				intersects(a.the_geom,b.the_geom);</sqlInstr>
        <sqlInstr>select register('unionGridWater');</sqlInstr>
        <sqlInstr>create table unionGridWater as select geomunion(the_geom),index
				from gridIntersectWithWater group by index;</sqlInstr>
        <sqlInstr>select register('waterDensityPerCell');</sqlInstr>
        <sqlInstr>create table waterDensityPerCell as select area(the_geom) as
				Area,index from unionGridWater;</sqlInstr>
        <sqlInstr>select register('density');</sqlInstr>
        <sqlInstr>create table density as select a.the_geom, a.index,
				b.Area/area(a.the_geom) from grid as a,waterDensityPerCell as b where
				a.index=b.index</sqlInstr>
      </sqlBlock>
    </menuItem>
  </menu>


  <menu label="Morphological indicators">
    <menuItem label="Perimeter">
      <className>org.gdms.sql.function.spatial.geometryProperties.Length</className>
    </menuItem>
    <menuItem label="Mean space">
      <className>org.urbsat.landcoverIndicators.function.MeanSpacingBetweenBuildingsInACell</className>
    </menuItem>
    <menuItem label="Mean height">
      <className>org.urbsat.utilities.GetZDEM</className>
    </menuItem>
    <menuItem label="Mean volume">
      <sqlBlock>
        <comment>Calculate the mean volume...</comment>
        <sqlInstr>select ...;</sqlInstr>
      </sqlBlock>
    </menuItem>
    <menuItem label="Compacity">
      <sqlBlock>
        <comment>Calculate the compacity...</comment>
        <sqlInstr>select ...;</sqlInstr>
      </sqlBlock>
    </menuItem>
    <menuItem label="Building number per cells">
      <sqlBlock>
        <comment>Calculate the building number per cells</comment>
        <sqlInstr>select ...;</sqlInstr>
      </sqlBlock>
    </menuItem>
  </menu>


  <menu label="Aerodynamic indicators">
    <menuItem label="Average build height">
      <sqlBlock>
        <comment>Calculate the average build height</comment>
        <sqlInstr>select ...;</sqlInstr>
      </sqlBlock>
    </menuItem>
    <menuItem label="Roughness">
      <sqlBlock>
        <comment>Calculate the city roughtness</comment>
        <sqlInstr>select ...;</sqlInstr>
      </sqlBlock>
    </menuItem>
    <menuItem label="Lateral surface">
      <sqlBlock>
        <comment>Calculate the lateral build surface</comment>
        <sqlInstr>select ...;</sqlInstr>
      </sqlBlock>
    </menuItem>
    <menuItem label="Frontal surface">
      <sqlBlock>
        <comment>Calculate the frontal build surface</comment>
        <sqlInstr>select ...;</sqlInstr>
      </sqlBlock>
    </menuItem>
  </menu>


  <menu label="Other functionnalities">
    <menuItem label="Create grid">
      <className>org.urbsat.utilities.CreateGrid</className>
    </menuItem>
    <menuItem label="CreateOrientedGrid">
      <sqlBlock>
        <comment>Create an oriented grid (angle expressed in degree) inside the
				envelope of the given layer</comment>
        <sqlInstr>select creategrid(500, 500, 15) from bati;</sqlInstr>
      </sqlBlock>
    </menuItem>
    <menuItem label="K-means">
      <className>org.urbsat.kmeans.KMeans</className>
    </menuItem>
    <menuItem label="Chaillou's classfication">
      <className>org.urbsat.landcoverIndicators.function.Chaillou</className>
    </menuItem>
    <menuItem label="GetZDEM">
      <className>org.urbsat.utilities.GetZDEM</className>
    </menuItem>
  </menu>

</menu>
