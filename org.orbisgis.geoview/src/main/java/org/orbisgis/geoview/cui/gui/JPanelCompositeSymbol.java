/*
 * JPanelCompositeSymbol.java
 *
 * Created on 15 de abril de 2008, 18:11
 */

package org.orbisgis.geoview.cui.gui;

import java.awt.Component;
import java.util.ArrayList;

import javax.swing.DefaultListModel;
import javax.swing.ListModel;

import org.gdms.data.types.GeometryConstraint;
import org.orbisgis.geoview.cui.gui.widgets.Canvas;
import org.orbisgis.geoview.renderer.legend.Legend;
import org.orbisgis.geoview.renderer.legend.Symbol;
import org.orbisgis.geoview.renderer.legend.SymbolComposite;
import org.orbisgis.geoview.renderer.legend.SymbolFactory;

/**
 *
 * @author  david
 */
public class JPanelCompositeSymbol extends javax.swing.JPanel implements ILegendPanelUI {
    
	String identity="Composite Symbol";
	private Canvas canvas = null;
	
	ArrayList<JPanelUniqueSymbolLegend> panels=null;
	
    /** Creates new form JPanelCompositeSymbol */
    public JPanelCompositeSymbol(ArrayList<JPanelUniqueSymbolLegend> panels) {
        initComponents();
        this.panels=panels;
        setCanvas();
        fillLists();
        refreshCanvas();
    }
    
    public void setPanels(ArrayList<JPanelUniqueSymbolLegend> panels){
    	this.panels=panels;
        fillLists();
    }
    
    private void fillLists() {
    	DefaultListModel mod = new DefaultListModel();
        DefaultListModel mod2 = new DefaultListModel();
		for (int i=0; i<panels.size(); i++){
			JPanelUniqueSymbolLegend pan = panels.get(i);
			String id=pan.getIdentity();
			mod.addElement(id);
		}
		jListPossibles.setModel(mod);
                jListSelecteds.setModel(mod2);
	}

	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        jListPossibles = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListSelecteds = new javax.swing.JList();
        jButtonSelect = new javax.swing.JButton();
        jButtonUnselect = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        jScrollPane1.setViewportView(jListPossibles);

        jLabel1.setText("Select the simple symbols that will be part of the composite.");

        jScrollPane2.setViewportView(jListSelecteds);

        jButtonSelect.setText(">");
        jButtonSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectActionPerformed(evt);
            }
        });

        jButtonUnselect.setText("<");
        jButtonUnselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUnselectActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 72, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonUnselect, 0, 0, Short.MAX_VALUE)
                                    .addComponent(jButtonSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jButtonSelect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonUnselect))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonUnselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUnselectActionPerformed
    	 Object[] selecteds = jListSelecteds.getSelectedValues();
         DefaultListModel mod2 = (DefaultListModel)jListPossibles.getModel();
         DefaultListModel mod = (DefaultListModel)jListSelecteds.getModel();
         for (int i=0; i<selecteds.length; i++){
         	String selected=(String)selecteds[i];
         	for (int j=0; j<mod.getSize(); j++){
         		String el = (String)mod.getElementAt(j);
         		if (el.equals(selected)){
         			mod.removeElementAt(j);
         		}
         	}
         	
             mod2.addElement(selected);
         }
         refreshCanvas();
    }//GEN-LAST:event_jButtonUnselectActionPerformed

    private void jButtonSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectActionPerformed
        Object[] selecteds = jListPossibles.getSelectedValues();
        DefaultListModel mod2 = (DefaultListModel)jListSelecteds.getModel();
        DefaultListModel mod = (DefaultListModel)jListPossibles.getModel();
        for (int i=0; i<selecteds.length; i++){
        	String selected=(String)selecteds[i];
        	for (int j=0; j<mod.getSize(); j++){
        		String el = (String)mod.getElementAt(j);
        		if (el.equals(selected)){
        			mod.removeElementAt(j);
        		}
        	}
        	
            mod2.addElement(selected);
        }
        refreshCanvas();
    }//GEN-LAST:event_jButtonSelectActionPerformed
    
    
    private void setCanvas (){
		canvas = new Canvas();
		jPanel1.add(canvas);
	}
	
    private void refreshCanvas( ) {
    	SymbolComposite sym = getSymbol();
    	canvas.setLegend( sym, GeometryConstraint.MIXED );
    	jPanel1.validate();
    	jPanel1.repaint();
    	
	}
    
    private SymbolComposite getSymbol() {
    	
    	Object str[] = ((DefaultListModel)jListSelecteds.getModel()).toArray();
    	Symbol sym [] = new Symbol [str.length];
    	
    	
    	int count=0;
		for (int i=0; i<panels.size(); i++){
			JPanelUniqueSymbolLegend unique = panels.get(i);
			for (int j=0; j<str.length; j++){
				if (unique.getIdentity().equals((String)str[j])){
					Symbol s = unique.getSymbol();
					sym[count++]=s;
				}
			}
		}
		
		
		SymbolComposite comp = (SymbolComposite)SymbolFactory.createSymbolComposite(sym);
		
		return comp;
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSelect;
    private javax.swing.JButton jButtonUnselect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jListPossibles;
    private javax.swing.JList jListSelecteds;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

	public Component getComponent() {
		// TODO Auto-generated method stub
		return this;
	}

	public String getIdentity() {
		// TODO Auto-generated method stub
		return identity;
	}

	public String getInfoText() {
		// TODO Auto-generated method stub
		return "Symbol Composite";
	}

	public Legend getLegend() {
		// TODO Auto-generated method stub
		return null;
	}

	public String getTitle() {
		// TODO Auto-generated method stub
		return "Symbol Composite";
	}

	public void setIdentity(String id) {
		// TODO Auto-generated method stub
		this.identity=id;
	}
	
	public String toString(){
		return identity;
	}
    
}
